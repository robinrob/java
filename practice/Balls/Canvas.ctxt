#BlueJ class context
comment0.params=title
comment0.target=Canvas(String)
comment0.text=\nCreate\ a\ Canvas\ with\ default\ height,\ width\ and\ background\ color\ \n(300,\ 300,\ white).\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\ \ \ \ \ \n\n
comment1.params=title\ width\ height
comment1.target=Canvas(String,\ int,\ int)
comment1.text=\nCreate\ a\ Canvas\ with\ default\ background\ color\ (white).\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n\n
comment10.params=xPos\ yPos\ diameter
comment10.target=void\ eraseCircle(int,\ int,\ int)
comment10.text=\nErase\ the\ internal\ dimensions\ of\ the\ given\ circle.\ This\ is\ a\ \nconvenience\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\nthe\ "erase"\ method.\n\n
comment11.params=xPos\ yPos\ width\ height
comment11.target=void\ eraseRectangle(int,\ int,\ int,\ int)
comment11.text=\nErase\ the\ internal\ dimensions\ of\ the\ given\ rectangle.\ This\ is\ a\ \nconvenience\ method.\ A\ similar\ effect\ can\ be\ achieved\ with\nthe\ "erase"\ method.\n\n
comment12.params=shape
comment12.target=void\ erase(Shape)
comment12.text=\nErase\ a\ given\ shape's\ interior\ on\ the\ screen.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment13.params=shape
comment13.target=void\ eraseOutline(Shape)
comment13.text=\nErases\ a\ given\ shape's\ outline\ on\ the\ screen.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n\n
comment14.params=image\ x\ y
comment14.target=boolean\ drawImage(Image,\ int,\ int)
comment14.text=\nDraws\ an\ image\ onto\ the\ canvas.\n@param\ \ image\ \ \ the\ Image\ object\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\ \n@param\ \ y\ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\ \n@return\ \ returns\ boolean\ value\ representing\ whether\ the\ image\ was\ \ncompletely\ loaded\ \n\n
comment15.params=text\ x\ y
comment15.target=void\ drawString(String,\ int,\ int)
comment15.text=\nDraws\ a\ String\ on\ the\ Canvas.\n@param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n@param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n\n
comment16.params=text\ x\ y
comment16.target=void\ eraseString(String,\ int,\ int)
comment16.text=\nErases\ a\ String\ on\ the\ Canvas.\n@param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\ \n@param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n@param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n\n
comment17.params=x1\ y1\ x2\ y2
comment17.target=void\ drawLine(int,\ int,\ int,\ int)
comment17.text=\nDraws\ a\ line\ on\ the\ Canvas.\n@param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\ \n@param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\ \n@param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\ \n@param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\ \n\n
comment18.params=newColor
comment18.target=void\ setForegroundColor(Color)
comment18.text=\nSets\ the\ foreground\ color\ of\ the\ Canvas.\n@param\ \ newColor\ \ \ the\ new\ color\ for\ the\ foreground\ of\ the\ Canvas\ \n\n
comment19.target=Color\ getForegroundColor()
comment19.text=\nReturns\ the\ current\ color\ of\ the\ foreground.\n@return\ \ \ the\ color\ of\ the\ foreground\ of\ the\ Canvas\ \n\n
comment2.params=title\ width\ height\ bgColor
comment2.target=Canvas(String,\ int,\ int,\ Color)
comment2.text=\nCreate\ a\ Canvas.\n@param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n@param\ width\ \ the\ desired\ width\ for\ the\ canvas\n@param\ height\ \ the\ desired\ height\ for\ the\ canvas\n@param\ bgClour\ \ the\ desired\ background\ color\ of\ the\ canvas\n\n
comment20.params=newColor
comment20.target=void\ setBackgroundColor(Color)
comment20.text=\nSets\ the\ background\ color\ of\ the\ Canvas.\n@param\ \ newColor\ \ \ the\ new\ color\ for\ the\ background\ of\ the\ Canvas\ \n\n
comment21.target=Color\ getBackgroundColor()
comment21.text=\nReturns\ the\ current\ color\ of\ the\ background\n@return\ \ \ the\ color\ of\ the\ background\ of\ the\ Canvas\ \n\n
comment22.params=newFont
comment22.target=void\ setFont(Font)
comment22.text=\nchanges\ the\ current\ Font\ used\ on\ the\ Canvas\n@param\ \ newFont\ \ \ new\ font\ to\ be\ used\ for\ String\ output\n\n
comment23.target=Font\ getFont()
comment23.text=\nReturns\ the\ current\ font\ of\ the\ canvas.\n@return\ \ \ \ \ the\ font\ currently\ in\ use\n\n
comment24.params=width\ height
comment24.target=void\ setSize(int,\ int)
comment24.text=\nSets\ the\ size\ of\ the\ canvas.\n@param\ \ width\ \ \ \ new\ width\ \n@param\ \ height\ \ \ new\ height\ \n\n
comment25.target=Dimension\ getSize()
comment25.text=\nReturns\ the\ size\ of\ the\ canvas.\n@return\ \ \ \ \ The\ current\ dimension\ of\ the\ canvas\n\n
comment26.params=milliseconds
comment26.target=void\ wait(int)
comment26.text=\nWaits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\nThis\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\nused\ when\ producing\ animations.\n@param\ \ milliseconds\ \ the\ number\ \n\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\nSet\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\nwhen\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\nvisible\ canvas\ to\ the\ front\ of\ other\ windows.\n@param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\nthe\ canvas\ (true\ or\ false)\ \n\n
comment4.target=boolean\ isVisible()
comment4.text=\nProvide\ information\ on\ visibility\ of\ the\ Canvas.\n@return\ \ true\ if\ canvas\ is\ visible,\ false\ otherwise\n\n
comment5.params=shape
comment5.target=void\ draw(Shape)
comment5.text=\nDraw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n\n
comment6.params=shape
comment6.target=void\ fill(Shape)
comment6.text=\nFill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ \nforeground\ color\ of\ the\ canvas.\n@param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\ \n\n
comment7.params=xPos\ yPos\ diameter
comment7.target=void\ fillCircle(int,\ int,\ int)
comment7.text=\nFill\ the\ internal\ dimensions\ of\ the\ given\ circle\ with\ the\ current\ \nforeground\ color\ of\ the\ canvas.\n\n
comment8.params=xPos\ yPos\ width\ height
comment8.target=void\ fillRectangle(int,\ int,\ int,\ int)
comment8.text=\nFill\ the\ internal\ dimensions\ of\ the\ given\ rectangle\ with\ the\ current\ \nforeground\ color\ of\ the\ canvas.\ This\ is\ a\ convenience\ method.\ A\ similar\ \neffect\ can\ be\ achieved\ with\ the\ "fill"\ method.\n\n
comment9.target=void\ erase()
comment9.text=\nErase\ the\ whole\ canvas.\n\n
numComments=27
